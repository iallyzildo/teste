//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Agendamento_ProvaModel", "FK_Agendamento_Medico", "Medico", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProvaAgendamento.Entity.Medico), "Agendamento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProvaAgendamento.Entity.Agendamento), true)]
[assembly: EdmRelationshipAttribute("Agendamento_ProvaModel", "FK_Agendamento_Motivo", "Motivo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProvaAgendamento.Entity.Motivo), "Agendamento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProvaAgendamento.Entity.Agendamento), true)]
[assembly: EdmRelationshipAttribute("Agendamento_ProvaModel", "FK_Agendamento_Paciente", "Paciente", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProvaAgendamento.Entity.Paciente), "Agendamento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProvaAgendamento.Entity.Agendamento), true)]

#endregion

namespace ProvaAgendamento.Entity
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Agendamento_ProvaEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Agendamento_ProvaEntities object using the connection string found in the 'Agendamento_ProvaEntities' section of the application configuration file.
        /// </summary>
        public Agendamento_ProvaEntities() : base("name=Agendamento_ProvaEntities", "Agendamento_ProvaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Agendamento_ProvaEntities object.
        /// </summary>
        public Agendamento_ProvaEntities(string connectionString) : base(connectionString, "Agendamento_ProvaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Agendamento_ProvaEntities object.
        /// </summary>
        public Agendamento_ProvaEntities(EntityConnection connection) : base(connection, "Agendamento_ProvaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Agendamento> Agendamento
        {
            get
            {
                if ((_Agendamento == null))
                {
                    _Agendamento = base.CreateObjectSet<Agendamento>("Agendamento");
                }
                return _Agendamento;
            }
        }
        private ObjectSet<Agendamento> _Agendamento;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Medico> Medico
        {
            get
            {
                if ((_Medico == null))
                {
                    _Medico = base.CreateObjectSet<Medico>("Medico");
                }
                return _Medico;
            }
        }
        private ObjectSet<Medico> _Medico;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Motivo> Motivo
        {
            get
            {
                if ((_Motivo == null))
                {
                    _Motivo = base.CreateObjectSet<Motivo>("Motivo");
                }
                return _Motivo;
            }
        }
        private ObjectSet<Motivo> _Motivo;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Paciente> Paciente
        {
            get
            {
                if ((_Paciente == null))
                {
                    _Paciente = base.CreateObjectSet<Paciente>("Paciente");
                }
                return _Paciente;
            }
        }
        private ObjectSet<Paciente> _Paciente;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Agendamento EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAgendamento(Agendamento agendamento)
        {
            base.AddObject("Agendamento", agendamento);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Medico EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedico(Medico medico)
        {
            base.AddObject("Medico", medico);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Motivo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMotivo(Motivo motivo)
        {
            base.AddObject("Motivo", motivo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Paciente EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPaciente(Paciente paciente)
        {
            base.AddObject("Paciente", paciente);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Agendamento_ProvaModel", Name="Agendamento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Agendamento : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Agendamento object.
        /// </summary>
        /// <param name="idAgendamento">Initial value of the IdAgendamento property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        /// <param name="hora">Initial value of the Hora property.</param>
        /// <param name="idPaciente">Initial value of the IdPaciente property.</param>
        /// <param name="idMedico">Initial value of the IdMedico property.</param>
        /// <param name="idMotivo">Initial value of the IdMotivo property.</param>
        public static Agendamento CreateAgendamento(global::System.Int32 idAgendamento, global::System.DateTime data, global::System.TimeSpan hora, global::System.Int32 idPaciente, global::System.Int32 idMedico, global::System.Int32 idMotivo)
        {
            Agendamento agendamento = new Agendamento();
            agendamento.IdAgendamento = idAgendamento;
            agendamento.Data = data;
            agendamento.Hora = hora;
            agendamento.IdPaciente = idPaciente;
            agendamento.IdMedico = idMedico;
            agendamento.IdMotivo = idMotivo;
            return agendamento;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdAgendamento
        {
            get
            {
                return _IdAgendamento;
            }
            set
            {
                if (_IdAgendamento != value)
                {
                    OnIdAgendamentoChanging(value);
                    ReportPropertyChanging("IdAgendamento");
                    _IdAgendamento = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdAgendamento");
                    OnIdAgendamentoChanged();
                }
            }
        }
        private global::System.Int32 _IdAgendamento;
        partial void OnIdAgendamentoChanging(global::System.Int32 value);
        partial void OnIdAgendamentoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.DateTime _Data;
        partial void OnDataChanging(global::System.DateTime value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan Hora
        {
            get
            {
                return _Hora;
            }
            set
            {
                OnHoraChanging(value);
                ReportPropertyChanging("Hora");
                _Hora = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hora");
                OnHoraChanged();
            }
        }
        private global::System.TimeSpan _Hora;
        partial void OnHoraChanging(global::System.TimeSpan value);
        partial void OnHoraChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPaciente
        {
            get
            {
                return _IdPaciente;
            }
            set
            {
                OnIdPacienteChanging(value);
                ReportPropertyChanging("IdPaciente");
                _IdPaciente = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdPaciente");
                OnIdPacienteChanged();
            }
        }
        private global::System.Int32 _IdPaciente;
        partial void OnIdPacienteChanging(global::System.Int32 value);
        partial void OnIdPacienteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMedico
        {
            get
            {
                return _IdMedico;
            }
            set
            {
                OnIdMedicoChanging(value);
                ReportPropertyChanging("IdMedico");
                _IdMedico = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdMedico");
                OnIdMedicoChanged();
            }
        }
        private global::System.Int32 _IdMedico;
        partial void OnIdMedicoChanging(global::System.Int32 value);
        partial void OnIdMedicoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMotivo
        {
            get
            {
                return _IdMotivo;
            }
            set
            {
                OnIdMotivoChanging(value);
                ReportPropertyChanging("IdMotivo");
                _IdMotivo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdMotivo");
                OnIdMotivoChanged();
            }
        }
        private global::System.Int32 _IdMotivo;
        partial void OnIdMotivoChanging(global::System.Int32 value);
        partial void OnIdMotivoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Agendamento_ProvaModel", "FK_Agendamento_Medico", "Medico")]
        public Medico Medico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("Agendamento_ProvaModel.FK_Agendamento_Medico", "Medico").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("Agendamento_ProvaModel.FK_Agendamento_Medico", "Medico").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Medico> MedicoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Medico>("Agendamento_ProvaModel.FK_Agendamento_Medico", "Medico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Medico>("Agendamento_ProvaModel.FK_Agendamento_Medico", "Medico", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Agendamento_ProvaModel", "FK_Agendamento_Motivo", "Motivo")]
        public Motivo Motivo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Motivo>("Agendamento_ProvaModel.FK_Agendamento_Motivo", "Motivo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Motivo>("Agendamento_ProvaModel.FK_Agendamento_Motivo", "Motivo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Motivo> MotivoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Motivo>("Agendamento_ProvaModel.FK_Agendamento_Motivo", "Motivo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Motivo>("Agendamento_ProvaModel.FK_Agendamento_Motivo", "Motivo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Agendamento_ProvaModel", "FK_Agendamento_Paciente", "Paciente")]
        public Paciente Paciente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("Agendamento_ProvaModel.FK_Agendamento_Paciente", "Paciente").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("Agendamento_ProvaModel.FK_Agendamento_Paciente", "Paciente").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Paciente> PacienteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Paciente>("Agendamento_ProvaModel.FK_Agendamento_Paciente", "Paciente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Paciente>("Agendamento_ProvaModel.FK_Agendamento_Paciente", "Paciente", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Agendamento_ProvaModel", Name="Medico")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Medico : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Medico object.
        /// </summary>
        /// <param name="idMedico">Initial value of the IdMedico property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        /// <param name="cRM">Initial value of the CRM property.</param>
        public static Medico CreateMedico(global::System.Int32 idMedico, global::System.String nome, global::System.String cRM)
        {
            Medico medico = new Medico();
            medico.IdMedico = idMedico;
            medico.Nome = nome;
            medico.CRM = cRM;
            return medico;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMedico
        {
            get
            {
                return _IdMedico;
            }
            set
            {
                if (_IdMedico != value)
                {
                    OnIdMedicoChanging(value);
                    ReportPropertyChanging("IdMedico");
                    _IdMedico = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdMedico");
                    OnIdMedicoChanged();
                }
            }
        }
        private global::System.Int32 _IdMedico;
        partial void OnIdMedicoChanging(global::System.Int32 value);
        partial void OnIdMedicoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CRM
        {
            get
            {
                return _CRM;
            }
            set
            {
                OnCRMChanging(value);
                ReportPropertyChanging("CRM");
                _CRM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CRM");
                OnCRMChanged();
            }
        }
        private global::System.String _CRM;
        partial void OnCRMChanging(global::System.String value);
        partial void OnCRMChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Agendamento_ProvaModel", "FK_Agendamento_Medico", "Agendamento")]
        public EntityCollection<Agendamento> Agendamento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Agendamento>("Agendamento_ProvaModel.FK_Agendamento_Medico", "Agendamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Agendamento>("Agendamento_ProvaModel.FK_Agendamento_Medico", "Agendamento", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Agendamento_ProvaModel", Name="Motivo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Motivo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Motivo object.
        /// </summary>
        /// <param name="idMotivo">Initial value of the IdMotivo property.</param>
        /// <param name="descricao">Initial value of the Descricao property.</param>
        public static Motivo CreateMotivo(global::System.Int32 idMotivo, global::System.String descricao)
        {
            Motivo motivo = new Motivo();
            motivo.IdMotivo = idMotivo;
            motivo.Descricao = descricao;
            return motivo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMotivo
        {
            get
            {
                return _IdMotivo;
            }
            set
            {
                if (_IdMotivo != value)
                {
                    OnIdMotivoChanging(value);
                    ReportPropertyChanging("IdMotivo");
                    _IdMotivo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdMotivo");
                    OnIdMotivoChanged();
                }
            }
        }
        private global::System.Int32 _IdMotivo;
        partial void OnIdMotivoChanging(global::System.Int32 value);
        partial void OnIdMotivoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descricao
        {
            get
            {
                return _Descricao;
            }
            set
            {
                OnDescricaoChanging(value);
                ReportPropertyChanging("Descricao");
                _Descricao = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descricao");
                OnDescricaoChanged();
            }
        }
        private global::System.String _Descricao;
        partial void OnDescricaoChanging(global::System.String value);
        partial void OnDescricaoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Agendamento_ProvaModel", "FK_Agendamento_Motivo", "Agendamento")]
        public EntityCollection<Agendamento> Agendamento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Agendamento>("Agendamento_ProvaModel.FK_Agendamento_Motivo", "Agendamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Agendamento>("Agendamento_ProvaModel.FK_Agendamento_Motivo", "Agendamento", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Agendamento_ProvaModel", Name="Paciente")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Paciente : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Paciente object.
        /// </summary>
        /// <param name="idPaciente">Initial value of the IdPaciente property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        /// <param name="telefone">Initial value of the Telefone property.</param>
        public static Paciente CreatePaciente(global::System.Int32 idPaciente, global::System.String nome, global::System.String telefone)
        {
            Paciente paciente = new Paciente();
            paciente.IdPaciente = idPaciente;
            paciente.Nome = nome;
            paciente.Telefone = telefone;
            return paciente;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdPaciente
        {
            get
            {
                return _IdPaciente;
            }
            set
            {
                if (_IdPaciente != value)
                {
                    OnIdPacienteChanging(value);
                    ReportPropertyChanging("IdPaciente");
                    _IdPaciente = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdPaciente");
                    OnIdPacienteChanged();
                }
            }
        }
        private global::System.Int32 _IdPaciente;
        partial void OnIdPacienteChanging(global::System.Int32 value);
        partial void OnIdPacienteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Telefone
        {
            get
            {
                return _Telefone;
            }
            set
            {
                OnTelefoneChanging(value);
                ReportPropertyChanging("Telefone");
                _Telefone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Telefone");
                OnTelefoneChanged();
            }
        }
        private global::System.String _Telefone;
        partial void OnTelefoneChanging(global::System.String value);
        partial void OnTelefoneChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Agendamento_ProvaModel", "FK_Agendamento_Paciente", "Agendamento")]
        public EntityCollection<Agendamento> Agendamento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Agendamento>("Agendamento_ProvaModel.FK_Agendamento_Paciente", "Agendamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Agendamento>("Agendamento_ProvaModel.FK_Agendamento_Paciente", "Agendamento", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
